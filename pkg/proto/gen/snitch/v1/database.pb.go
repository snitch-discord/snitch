// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: snitch/v1/database.proto

package snitchv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Metadata database operations
type CreateGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName     string                 `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreateGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type FindGroupByServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindGroupByServerRequest) Reset() {
	*x = FindGroupByServerRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindGroupByServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindGroupByServerRequest) ProtoMessage() {}

func (x *FindGroupByServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindGroupByServerRequest.ProtoReflect.Descriptor instead.
func (*FindGroupByServerRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{1}
}

func (x *FindGroupByServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type FindGroupByServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindGroupByServerResponse) Reset() {
	*x = FindGroupByServerResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindGroupByServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindGroupByServerResponse) ProtoMessage() {}

func (x *FindGroupByServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindGroupByServerResponse.ProtoReflect.Descriptor instead.
func (*FindGroupByServerResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{2}
}

func (x *FindGroupByServerResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type AddServerToGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	GroupId       string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddServerToGroupRequest) Reset() {
	*x = AddServerToGroupRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddServerToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerToGroupRequest) ProtoMessage() {}

func (x *AddServerToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerToGroupRequest.ProtoReflect.Descriptor instead.
func (*AddServerToGroupRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{3}
}

func (x *AddServerToGroupRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *AddServerToGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// Group database operations
type CreateGroupDatabaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupDatabaseRequest) Reset() {
	*x = CreateGroupDatabaseRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupDatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupDatabaseRequest) ProtoMessage() {}

func (x *CreateGroupDatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupDatabaseRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupDatabaseRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{4}
}

func (x *CreateGroupDatabaseRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type DbCreateReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ReporterId    string                 `protobuf:"bytes,3,opt,name=reporter_id,json=reporterId,proto3" json:"reporter_id,omitempty"`
	ServerId      string                 `protobuf:"bytes,4,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	EvidenceUrl   *string                `protobuf:"bytes,6,opt,name=evidence_url,json=evidenceUrl,proto3,oneof" json:"evidence_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbCreateReportRequest) Reset() {
	*x = DbCreateReportRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbCreateReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbCreateReportRequest) ProtoMessage() {}

func (x *DbCreateReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbCreateReportRequest.ProtoReflect.Descriptor instead.
func (*DbCreateReportRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{5}
}

func (x *DbCreateReportRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DbCreateReportRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DbCreateReportRequest) GetReporterId() string {
	if x != nil {
		return x.ReporterId
	}
	return ""
}

func (x *DbCreateReportRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *DbCreateReportRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DbCreateReportRequest) GetEvidenceUrl() string {
	if x != nil && x.EvidenceUrl != nil {
		return *x.EvidenceUrl
	}
	return ""
}

type DbCreateReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportId      int64                  `protobuf:"varint,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbCreateReportResponse) Reset() {
	*x = DbCreateReportResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbCreateReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbCreateReportResponse) ProtoMessage() {}

func (x *DbCreateReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbCreateReportResponse.ProtoReflect.Descriptor instead.
func (*DbCreateReportResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{6}
}

func (x *DbCreateReportResponse) GetReportId() int64 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

type DbGetReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ReportId      int64                  `protobuf:"varint,2,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbGetReportRequest) Reset() {
	*x = DbGetReportRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbGetReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbGetReportRequest) ProtoMessage() {}

func (x *DbGetReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbGetReportRequest.ProtoReflect.Descriptor instead.
func (*DbGetReportRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{7}
}

func (x *DbGetReportRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DbGetReportRequest) GetReportId() int64 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

type DbGetReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ReporterId    string                 `protobuf:"bytes,3,opt,name=reporter_id,json=reporterId,proto3" json:"reporter_id,omitempty"`
	ServerId      string                 `protobuf:"bytes,4,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	EvidenceUrl   *string                `protobuf:"bytes,6,opt,name=evidence_url,json=evidenceUrl,proto3,oneof" json:"evidence_url,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbGetReportResponse) Reset() {
	*x = DbGetReportResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbGetReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbGetReportResponse) ProtoMessage() {}

func (x *DbGetReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbGetReportResponse.ProtoReflect.Descriptor instead.
func (*DbGetReportResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{8}
}

func (x *DbGetReportResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DbGetReportResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DbGetReportResponse) GetReporterId() string {
	if x != nil {
		return x.ReporterId
	}
	return ""
}

func (x *DbGetReportResponse) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *DbGetReportResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DbGetReportResponse) GetEvidenceUrl() string {
	if x != nil && x.EvidenceUrl != nil {
		return *x.EvidenceUrl
	}
	return ""
}

func (x *DbGetReportResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type DbListReportsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId        *string                `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	Limit         *int32                 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset        *int32                 `protobuf:"varint,4,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbListReportsRequest) Reset() {
	*x = DbListReportsRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbListReportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbListReportsRequest) ProtoMessage() {}

func (x *DbListReportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbListReportsRequest.ProtoReflect.Descriptor instead.
func (*DbListReportsRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{9}
}

func (x *DbListReportsRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DbListReportsRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *DbListReportsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *DbListReportsRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type DbListReportsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reports       []*DbGetReportResponse `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbListReportsResponse) Reset() {
	*x = DbListReportsResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbListReportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbListReportsResponse) ProtoMessage() {}

func (x *DbListReportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbListReportsResponse.ProtoReflect.Descriptor instead.
func (*DbListReportsResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{10}
}

func (x *DbListReportsResponse) GetReports() []*DbGetReportResponse {
	if x != nil {
		return x.Reports
	}
	return nil
}

type DbDeleteReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ReportId      int64                  `protobuf:"varint,2,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbDeleteReportRequest) Reset() {
	*x = DbDeleteReportRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbDeleteReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbDeleteReportRequest) ProtoMessage() {}

func (x *DbDeleteReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbDeleteReportRequest.ProtoReflect.Descriptor instead.
func (*DbDeleteReportRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{11}
}

func (x *DbDeleteReportRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DbDeleteReportRequest) GetReportId() int64 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

type DbCreateUserHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ServerId      string                 `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Reason        *string                `protobuf:"bytes,5,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	EvidenceUrl   *string                `protobuf:"bytes,6,opt,name=evidence_url,json=evidenceUrl,proto3,oneof" json:"evidence_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbCreateUserHistoryRequest) Reset() {
	*x = DbCreateUserHistoryRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbCreateUserHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbCreateUserHistoryRequest) ProtoMessage() {}

func (x *DbCreateUserHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbCreateUserHistoryRequest.ProtoReflect.Descriptor instead.
func (*DbCreateUserHistoryRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{12}
}

func (x *DbCreateUserHistoryRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DbCreateUserHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DbCreateUserHistoryRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *DbCreateUserHistoryRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DbCreateUserHistoryRequest) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *DbCreateUserHistoryRequest) GetEvidenceUrl() string {
	if x != nil && x.EvidenceUrl != nil {
		return *x.EvidenceUrl
	}
	return ""
}

type DbCreateUserHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HistoryId     int64                  `protobuf:"varint,1,opt,name=history_id,json=historyId,proto3" json:"history_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbCreateUserHistoryResponse) Reset() {
	*x = DbCreateUserHistoryResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbCreateUserHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbCreateUserHistoryResponse) ProtoMessage() {}

func (x *DbCreateUserHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbCreateUserHistoryResponse.ProtoReflect.Descriptor instead.
func (*DbCreateUserHistoryResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{13}
}

func (x *DbCreateUserHistoryResponse) GetHistoryId() int64 {
	if x != nil {
		return x.HistoryId
	}
	return 0
}

type DbGetUserHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit         *int32                 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset        *int32                 `protobuf:"varint,4,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbGetUserHistoryRequest) Reset() {
	*x = DbGetUserHistoryRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbGetUserHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbGetUserHistoryRequest) ProtoMessage() {}

func (x *DbGetUserHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbGetUserHistoryRequest.ProtoReflect.Descriptor instead.
func (*DbGetUserHistoryRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{14}
}

func (x *DbGetUserHistoryRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DbGetUserHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DbGetUserHistoryRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *DbGetUserHistoryRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type DbUserHistoryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ServerId      string                 `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Reason        *string                `protobuf:"bytes,5,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	EvidenceUrl   *string                `protobuf:"bytes,6,opt,name=evidence_url,json=evidenceUrl,proto3,oneof" json:"evidence_url,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbUserHistoryEntry) Reset() {
	*x = DbUserHistoryEntry{}
	mi := &file_snitch_v1_database_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbUserHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbUserHistoryEntry) ProtoMessage() {}

func (x *DbUserHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbUserHistoryEntry.ProtoReflect.Descriptor instead.
func (*DbUserHistoryEntry) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{15}
}

func (x *DbUserHistoryEntry) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DbUserHistoryEntry) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DbUserHistoryEntry) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *DbUserHistoryEntry) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DbUserHistoryEntry) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *DbUserHistoryEntry) GetEvidenceUrl() string {
	if x != nil && x.EvidenceUrl != nil {
		return *x.EvidenceUrl
	}
	return ""
}

func (x *DbUserHistoryEntry) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type DbGetUserHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*DbUserHistoryEntry  `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbGetUserHistoryResponse) Reset() {
	*x = DbGetUserHistoryResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbGetUserHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbGetUserHistoryResponse) ProtoMessage() {}

func (x *DbGetUserHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbGetUserHistoryResponse.ProtoReflect.Descriptor instead.
func (*DbGetUserHistoryResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{16}
}

func (x *DbGetUserHistoryResponse) GetEntries() []*DbUserHistoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ListServersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersRequest) Reset() {
	*x = ListServersRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersRequest) ProtoMessage() {}

func (x *ListServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersRequest.ProtoReflect.Descriptor instead.
func (*ListServersRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{17}
}

func (x *ListServersRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type ServerEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	GroupId       string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerEntry) Reset() {
	*x = ServerEntry{}
	mi := &file_snitch_v1_database_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerEntry) ProtoMessage() {}

func (x *ServerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerEntry.ProtoReflect.Descriptor instead.
func (*ServerEntry) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{18}
}

func (x *ServerEntry) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerEntry) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type ListServersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []*ServerEntry         `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersResponse) Reset() {
	*x = ListServersResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersResponse) ProtoMessage() {}

func (x *ListServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersResponse.ProtoReflect.Descriptor instead.
func (*ListServersResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{19}
}

func (x *ListServersResponse) GetServers() []*ServerEntry {
	if x != nil {
		return x.Servers
	}
	return nil
}

var File_snitch_v1_database_proto protoreflect.FileDescriptor

const file_snitch_v1_database_proto_rawDesc = "" +
	"\n" +
	"\x18snitch/v1/database.proto\x12\tsnitch.v1\x1a\x1bgoogle/protobuf/empty.proto\"N\n" +
	"\x12CreateGroupRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x1d\n" +
	"\n" +
	"group_name\x18\x02 \x01(\tR\tgroupName\"7\n" +
	"\x18FindGroupByServerRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\"6\n" +
	"\x19FindGroupByServerResponse\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\"Q\n" +
	"\x17AddServerToGroupRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\"7\n" +
	"\x1aCreateGroupDatabaseRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\"\xda\x01\n" +
	"\x15DbCreateReportRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1f\n" +
	"\vreporter_id\x18\x03 \x01(\tR\n" +
	"reporterId\x12\x1b\n" +
	"\tserver_id\x18\x04 \x01(\tR\bserverId\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12&\n" +
	"\fevidence_url\x18\x06 \x01(\tH\x00R\vevidenceUrl\x88\x01\x01B\x0f\n" +
	"\r_evidence_url\"5\n" +
	"\x16DbCreateReportResponse\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\x03R\breportId\"L\n" +
	"\x12DbGetReportRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x1b\n" +
	"\treport_id\x18\x02 \x01(\x03R\breportId\"\xec\x01\n" +
	"\x13DbGetReportResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1f\n" +
	"\vreporter_id\x18\x03 \x01(\tR\n" +
	"reporterId\x12\x1b\n" +
	"\tserver_id\x18\x04 \x01(\tR\bserverId\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12&\n" +
	"\fevidence_url\x18\x06 \x01(\tH\x00R\vevidenceUrl\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAtB\x0f\n" +
	"\r_evidence_url\"\xa8\x01\n" +
	"\x14DbListReportsRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x1c\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x03 \x01(\x05H\x01R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\x04 \x01(\x05H\x02R\x06offset\x88\x01\x01B\n" +
	"\n" +
	"\b_user_idB\b\n" +
	"\x06_limitB\t\n" +
	"\a_offset\"Q\n" +
	"\x15DbListReportsResponse\x128\n" +
	"\areports\x18\x01 \x03(\v2\x1e.snitch.v1.DbGetReportResponseR\areports\"O\n" +
	"\x15DbDeleteReportRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x1b\n" +
	"\treport_id\x18\x02 \x01(\x03R\breportId\"\xe6\x01\n" +
	"\x1aDbCreateUserHistoryRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1b\n" +
	"\tserver_id\x18\x03 \x01(\tR\bserverId\x12\x16\n" +
	"\x06action\x18\x04 \x01(\tR\x06action\x12\x1b\n" +
	"\x06reason\x18\x05 \x01(\tH\x00R\x06reason\x88\x01\x01\x12&\n" +
	"\fevidence_url\x18\x06 \x01(\tH\x01R\vevidenceUrl\x88\x01\x01B\t\n" +
	"\a_reasonB\x0f\n" +
	"\r_evidence_url\"<\n" +
	"\x1bDbCreateUserHistoryResponse\x12\x1d\n" +
	"\n" +
	"history_id\x18\x01 \x01(\x03R\thistoryId\"\x9a\x01\n" +
	"\x17DbGetUserHistoryRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x19\n" +
	"\x05limit\x18\x03 \x01(\x05H\x00R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\x04 \x01(\x05H\x01R\x06offset\x88\x01\x01B\b\n" +
	"\x06_limitB\t\n" +
	"\a_offset\"\xf2\x01\n" +
	"\x12DbUserHistoryEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1b\n" +
	"\tserver_id\x18\x03 \x01(\tR\bserverId\x12\x16\n" +
	"\x06action\x18\x04 \x01(\tR\x06action\x12\x1b\n" +
	"\x06reason\x18\x05 \x01(\tH\x00R\x06reason\x88\x01\x01\x12&\n" +
	"\fevidence_url\x18\x06 \x01(\tH\x01R\vevidenceUrl\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAtB\t\n" +
	"\a_reasonB\x0f\n" +
	"\r_evidence_url\"S\n" +
	"\x18DbGetUserHistoryResponse\x127\n" +
	"\aentries\x18\x01 \x03(\v2\x1d.snitch.v1.DbUserHistoryEntryR\aentries\"/\n" +
	"\x12ListServersRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\"E\n" +
	"\vServerEntry\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\"G\n" +
	"\x13ListServersResponse\x120\n" +
	"\aservers\x18\x01 \x03(\v2\x16.snitch.v1.ServerEntryR\aservers2\xbd\a\n" +
	"\x0fDatabaseService\x12F\n" +
	"\vCreateGroup\x12\x1d.snitch.v1.CreateGroupRequest\x1a\x16.google.protobuf.Empty\"\x00\x12`\n" +
	"\x11FindGroupByServer\x12#.snitch.v1.FindGroupByServerRequest\x1a$.snitch.v1.FindGroupByServerResponse\"\x00\x12P\n" +
	"\x10AddServerToGroup\x12\".snitch.v1.AddServerToGroupRequest\x1a\x16.google.protobuf.Empty\"\x00\x12V\n" +
	"\x13CreateGroupDatabase\x12%.snitch.v1.CreateGroupDatabaseRequest\x1a\x16.google.protobuf.Empty\"\x00\x12U\n" +
	"\fCreateReport\x12 .snitch.v1.DbCreateReportRequest\x1a!.snitch.v1.DbCreateReportResponse\"\x00\x12L\n" +
	"\tGetReport\x12\x1d.snitch.v1.DbGetReportRequest\x1a\x1e.snitch.v1.DbGetReportResponse\"\x00\x12R\n" +
	"\vListReports\x12\x1f.snitch.v1.DbListReportsRequest\x1a .snitch.v1.DbListReportsResponse\"\x00\x12J\n" +
	"\fDeleteReport\x12 .snitch.v1.DbDeleteReportRequest\x1a\x16.google.protobuf.Empty\"\x00\x12d\n" +
	"\x11CreateUserHistory\x12%.snitch.v1.DbCreateUserHistoryRequest\x1a&.snitch.v1.DbCreateUserHistoryResponse\"\x00\x12[\n" +
	"\x0eGetUserHistory\x12\".snitch.v1.DbGetUserHistoryRequest\x1a#.snitch.v1.DbGetUserHistoryResponse\"\x00\x12N\n" +
	"\vListServers\x12\x1d.snitch.v1.ListServersRequest\x1a\x1e.snitch.v1.ListServersResponse\"\x00B)Z'snitch/pkg/proto/gen/snitch/v1;snitchv1b\x06proto3"

var (
	file_snitch_v1_database_proto_rawDescOnce sync.Once
	file_snitch_v1_database_proto_rawDescData []byte
)

func file_snitch_v1_database_proto_rawDescGZIP() []byte {
	file_snitch_v1_database_proto_rawDescOnce.Do(func() {
		file_snitch_v1_database_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_snitch_v1_database_proto_rawDesc), len(file_snitch_v1_database_proto_rawDesc)))
	})
	return file_snitch_v1_database_proto_rawDescData
}

var file_snitch_v1_database_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_snitch_v1_database_proto_goTypes = []any{
	(*CreateGroupRequest)(nil),          // 0: snitch.v1.CreateGroupRequest
	(*FindGroupByServerRequest)(nil),    // 1: snitch.v1.FindGroupByServerRequest
	(*FindGroupByServerResponse)(nil),   // 2: snitch.v1.FindGroupByServerResponse
	(*AddServerToGroupRequest)(nil),     // 3: snitch.v1.AddServerToGroupRequest
	(*CreateGroupDatabaseRequest)(nil),  // 4: snitch.v1.CreateGroupDatabaseRequest
	(*DbCreateReportRequest)(nil),       // 5: snitch.v1.DbCreateReportRequest
	(*DbCreateReportResponse)(nil),      // 6: snitch.v1.DbCreateReportResponse
	(*DbGetReportRequest)(nil),          // 7: snitch.v1.DbGetReportRequest
	(*DbGetReportResponse)(nil),         // 8: snitch.v1.DbGetReportResponse
	(*DbListReportsRequest)(nil),        // 9: snitch.v1.DbListReportsRequest
	(*DbListReportsResponse)(nil),       // 10: snitch.v1.DbListReportsResponse
	(*DbDeleteReportRequest)(nil),       // 11: snitch.v1.DbDeleteReportRequest
	(*DbCreateUserHistoryRequest)(nil),  // 12: snitch.v1.DbCreateUserHistoryRequest
	(*DbCreateUserHistoryResponse)(nil), // 13: snitch.v1.DbCreateUserHistoryResponse
	(*DbGetUserHistoryRequest)(nil),     // 14: snitch.v1.DbGetUserHistoryRequest
	(*DbUserHistoryEntry)(nil),          // 15: snitch.v1.DbUserHistoryEntry
	(*DbGetUserHistoryResponse)(nil),    // 16: snitch.v1.DbGetUserHistoryResponse
	(*ListServersRequest)(nil),          // 17: snitch.v1.ListServersRequest
	(*ServerEntry)(nil),                 // 18: snitch.v1.ServerEntry
	(*ListServersResponse)(nil),         // 19: snitch.v1.ListServersResponse
	(*emptypb.Empty)(nil),               // 20: google.protobuf.Empty
}
var file_snitch_v1_database_proto_depIdxs = []int32{
	8,  // 0: snitch.v1.DbListReportsResponse.reports:type_name -> snitch.v1.DbGetReportResponse
	15, // 1: snitch.v1.DbGetUserHistoryResponse.entries:type_name -> snitch.v1.DbUserHistoryEntry
	18, // 2: snitch.v1.ListServersResponse.servers:type_name -> snitch.v1.ServerEntry
	0,  // 3: snitch.v1.DatabaseService.CreateGroup:input_type -> snitch.v1.CreateGroupRequest
	1,  // 4: snitch.v1.DatabaseService.FindGroupByServer:input_type -> snitch.v1.FindGroupByServerRequest
	3,  // 5: snitch.v1.DatabaseService.AddServerToGroup:input_type -> snitch.v1.AddServerToGroupRequest
	4,  // 6: snitch.v1.DatabaseService.CreateGroupDatabase:input_type -> snitch.v1.CreateGroupDatabaseRequest
	5,  // 7: snitch.v1.DatabaseService.CreateReport:input_type -> snitch.v1.DbCreateReportRequest
	7,  // 8: snitch.v1.DatabaseService.GetReport:input_type -> snitch.v1.DbGetReportRequest
	9,  // 9: snitch.v1.DatabaseService.ListReports:input_type -> snitch.v1.DbListReportsRequest
	11, // 10: snitch.v1.DatabaseService.DeleteReport:input_type -> snitch.v1.DbDeleteReportRequest
	12, // 11: snitch.v1.DatabaseService.CreateUserHistory:input_type -> snitch.v1.DbCreateUserHistoryRequest
	14, // 12: snitch.v1.DatabaseService.GetUserHistory:input_type -> snitch.v1.DbGetUserHistoryRequest
	17, // 13: snitch.v1.DatabaseService.ListServers:input_type -> snitch.v1.ListServersRequest
	20, // 14: snitch.v1.DatabaseService.CreateGroup:output_type -> google.protobuf.Empty
	2,  // 15: snitch.v1.DatabaseService.FindGroupByServer:output_type -> snitch.v1.FindGroupByServerResponse
	20, // 16: snitch.v1.DatabaseService.AddServerToGroup:output_type -> google.protobuf.Empty
	20, // 17: snitch.v1.DatabaseService.CreateGroupDatabase:output_type -> google.protobuf.Empty
	6,  // 18: snitch.v1.DatabaseService.CreateReport:output_type -> snitch.v1.DbCreateReportResponse
	8,  // 19: snitch.v1.DatabaseService.GetReport:output_type -> snitch.v1.DbGetReportResponse
	10, // 20: snitch.v1.DatabaseService.ListReports:output_type -> snitch.v1.DbListReportsResponse
	20, // 21: snitch.v1.DatabaseService.DeleteReport:output_type -> google.protobuf.Empty
	13, // 22: snitch.v1.DatabaseService.CreateUserHistory:output_type -> snitch.v1.DbCreateUserHistoryResponse
	16, // 23: snitch.v1.DatabaseService.GetUserHistory:output_type -> snitch.v1.DbGetUserHistoryResponse
	19, // 24: snitch.v1.DatabaseService.ListServers:output_type -> snitch.v1.ListServersResponse
	14, // [14:25] is the sub-list for method output_type
	3,  // [3:14] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_snitch_v1_database_proto_init() }
func file_snitch_v1_database_proto_init() {
	if File_snitch_v1_database_proto != nil {
		return
	}
	file_snitch_v1_database_proto_msgTypes[5].OneofWrappers = []any{}
	file_snitch_v1_database_proto_msgTypes[8].OneofWrappers = []any{}
	file_snitch_v1_database_proto_msgTypes[9].OneofWrappers = []any{}
	file_snitch_v1_database_proto_msgTypes[12].OneofWrappers = []any{}
	file_snitch_v1_database_proto_msgTypes[14].OneofWrappers = []any{}
	file_snitch_v1_database_proto_msgTypes[15].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_snitch_v1_database_proto_rawDesc), len(file_snitch_v1_database_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_snitch_v1_database_proto_goTypes,
		DependencyIndexes: file_snitch_v1_database_proto_depIdxs,
		MessageInfos:      file_snitch_v1_database_proto_msgTypes,
	}.Build()
	File_snitch_v1_database_proto = out.File
	file_snitch_v1_database_proto_goTypes = nil
	file_snitch_v1_database_proto_depIdxs = nil
}
