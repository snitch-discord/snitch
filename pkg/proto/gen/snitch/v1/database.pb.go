// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: snitch/v1/database.proto

package snitchv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Metadata database operations
type CreateGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName     string                 `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreateGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type CreateGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGroupResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type FindGroupByServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindGroupByServerRequest) Reset() {
	*x = FindGroupByServerRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindGroupByServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindGroupByServerRequest) ProtoMessage() {}

func (x *FindGroupByServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindGroupByServerRequest.ProtoReflect.Descriptor instead.
func (*FindGroupByServerRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{2}
}

func (x *FindGroupByServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type FindGroupByServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindGroupByServerResponse) Reset() {
	*x = FindGroupByServerResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindGroupByServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindGroupByServerResponse) ProtoMessage() {}

func (x *FindGroupByServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindGroupByServerResponse.ProtoReflect.Descriptor instead.
func (*FindGroupByServerResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{3}
}

func (x *FindGroupByServerResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type AddServerToGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	GroupId       string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddServerToGroupRequest) Reset() {
	*x = AddServerToGroupRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddServerToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerToGroupRequest) ProtoMessage() {}

func (x *AddServerToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerToGroupRequest.ProtoReflect.Descriptor instead.
func (*AddServerToGroupRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{4}
}

func (x *AddServerToGroupRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *AddServerToGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type AddServerToGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddServerToGroupResponse) Reset() {
	*x = AddServerToGroupResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddServerToGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerToGroupResponse) ProtoMessage() {}

func (x *AddServerToGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerToGroupResponse.ProtoReflect.Descriptor instead.
func (*AddServerToGroupResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{5}
}

func (x *AddServerToGroupResponse) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

// Group database operations
type CreateGroupDatabaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupDatabaseRequest) Reset() {
	*x = CreateGroupDatabaseRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupDatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupDatabaseRequest) ProtoMessage() {}

func (x *CreateGroupDatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupDatabaseRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupDatabaseRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{6}
}

func (x *CreateGroupDatabaseRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type CreateGroupDatabaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupDatabaseResponse) Reset() {
	*x = CreateGroupDatabaseResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupDatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupDatabaseResponse) ProtoMessage() {}

func (x *CreateGroupDatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupDatabaseResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupDatabaseResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{7}
}

func (x *CreateGroupDatabaseResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type DatabaseServiceCreateReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ReporterId    string                 `protobuf:"bytes,3,opt,name=reporter_id,json=reporterId,proto3" json:"reporter_id,omitempty"`
	ServerId      string                 `protobuf:"bytes,4,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	EvidenceUrl   *string                `protobuf:"bytes,6,opt,name=evidence_url,json=evidenceUrl,proto3,oneof" json:"evidence_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceCreateReportRequest) Reset() {
	*x = DatabaseServiceCreateReportRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceCreateReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceCreateReportRequest) ProtoMessage() {}

func (x *DatabaseServiceCreateReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceCreateReportRequest.ProtoReflect.Descriptor instead.
func (*DatabaseServiceCreateReportRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{8}
}

func (x *DatabaseServiceCreateReportRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DatabaseServiceCreateReportRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DatabaseServiceCreateReportRequest) GetReporterId() string {
	if x != nil {
		return x.ReporterId
	}
	return ""
}

func (x *DatabaseServiceCreateReportRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *DatabaseServiceCreateReportRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DatabaseServiceCreateReportRequest) GetEvidenceUrl() string {
	if x != nil && x.EvidenceUrl != nil {
		return *x.EvidenceUrl
	}
	return ""
}

type DatabaseServiceCreateReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportId      int64                  `protobuf:"varint,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceCreateReportResponse) Reset() {
	*x = DatabaseServiceCreateReportResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceCreateReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceCreateReportResponse) ProtoMessage() {}

func (x *DatabaseServiceCreateReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceCreateReportResponse.ProtoReflect.Descriptor instead.
func (*DatabaseServiceCreateReportResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{9}
}

func (x *DatabaseServiceCreateReportResponse) GetReportId() int64 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

type DatabaseServiceGetReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ReportId      int64                  `protobuf:"varint,2,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceGetReportRequest) Reset() {
	*x = DatabaseServiceGetReportRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceGetReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceGetReportRequest) ProtoMessage() {}

func (x *DatabaseServiceGetReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceGetReportRequest.ProtoReflect.Descriptor instead.
func (*DatabaseServiceGetReportRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{10}
}

func (x *DatabaseServiceGetReportRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DatabaseServiceGetReportRequest) GetReportId() int64 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

type DatabaseServiceGetReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ReporterId    string                 `protobuf:"bytes,3,opt,name=reporter_id,json=reporterId,proto3" json:"reporter_id,omitempty"`
	ServerId      string                 `protobuf:"bytes,4,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	EvidenceUrl   *string                `protobuf:"bytes,6,opt,name=evidence_url,json=evidenceUrl,proto3,oneof" json:"evidence_url,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceGetReportResponse) Reset() {
	*x = DatabaseServiceGetReportResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceGetReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceGetReportResponse) ProtoMessage() {}

func (x *DatabaseServiceGetReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceGetReportResponse.ProtoReflect.Descriptor instead.
func (*DatabaseServiceGetReportResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{11}
}

func (x *DatabaseServiceGetReportResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DatabaseServiceGetReportResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DatabaseServiceGetReportResponse) GetReporterId() string {
	if x != nil {
		return x.ReporterId
	}
	return ""
}

func (x *DatabaseServiceGetReportResponse) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *DatabaseServiceGetReportResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DatabaseServiceGetReportResponse) GetEvidenceUrl() string {
	if x != nil && x.EvidenceUrl != nil {
		return *x.EvidenceUrl
	}
	return ""
}

func (x *DatabaseServiceGetReportResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type DatabaseServiceListReportsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId        *string                `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	Limit         *int32                 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset        *int32                 `protobuf:"varint,4,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceListReportsRequest) Reset() {
	*x = DatabaseServiceListReportsRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceListReportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceListReportsRequest) ProtoMessage() {}

func (x *DatabaseServiceListReportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceListReportsRequest.ProtoReflect.Descriptor instead.
func (*DatabaseServiceListReportsRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{12}
}

func (x *DatabaseServiceListReportsRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DatabaseServiceListReportsRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *DatabaseServiceListReportsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *DatabaseServiceListReportsRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type DatabaseServiceDeleteReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportId      int64                  `protobuf:"varint,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceDeleteReportResponse) Reset() {
	*x = DatabaseServiceDeleteReportResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceDeleteReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceDeleteReportResponse) ProtoMessage() {}

func (x *DatabaseServiceDeleteReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceDeleteReportResponse.ProtoReflect.Descriptor instead.
func (*DatabaseServiceDeleteReportResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{13}
}

func (x *DatabaseServiceDeleteReportResponse) GetReportId() int64 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

type DatabaseServiceListReportsResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Reports       []*DatabaseServiceGetReportResponse `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceListReportsResponse) Reset() {
	*x = DatabaseServiceListReportsResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceListReportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceListReportsResponse) ProtoMessage() {}

func (x *DatabaseServiceListReportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceListReportsResponse.ProtoReflect.Descriptor instead.
func (*DatabaseServiceListReportsResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{14}
}

func (x *DatabaseServiceListReportsResponse) GetReports() []*DatabaseServiceGetReportResponse {
	if x != nil {
		return x.Reports
	}
	return nil
}

type DatabaseServiceDeleteReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ReportId      int64                  `protobuf:"varint,2,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceDeleteReportRequest) Reset() {
	*x = DatabaseServiceDeleteReportRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceDeleteReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceDeleteReportRequest) ProtoMessage() {}

func (x *DatabaseServiceDeleteReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceDeleteReportRequest.ProtoReflect.Descriptor instead.
func (*DatabaseServiceDeleteReportRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{15}
}

func (x *DatabaseServiceDeleteReportRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DatabaseServiceDeleteReportRequest) GetReportId() int64 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

type DatabaseServiceCreateUserHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ServerId      string                 `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Reason        *string                `protobuf:"bytes,5,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	EvidenceUrl   *string                `protobuf:"bytes,6,opt,name=evidence_url,json=evidenceUrl,proto3,oneof" json:"evidence_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceCreateUserHistoryRequest) Reset() {
	*x = DatabaseServiceCreateUserHistoryRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceCreateUserHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceCreateUserHistoryRequest) ProtoMessage() {}

func (x *DatabaseServiceCreateUserHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceCreateUserHistoryRequest.ProtoReflect.Descriptor instead.
func (*DatabaseServiceCreateUserHistoryRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{16}
}

func (x *DatabaseServiceCreateUserHistoryRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DatabaseServiceCreateUserHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DatabaseServiceCreateUserHistoryRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *DatabaseServiceCreateUserHistoryRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DatabaseServiceCreateUserHistoryRequest) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *DatabaseServiceCreateUserHistoryRequest) GetEvidenceUrl() string {
	if x != nil && x.EvidenceUrl != nil {
		return *x.EvidenceUrl
	}
	return ""
}

type DatabaseServiceCreateUserHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HistoryId     int64                  `protobuf:"varint,1,opt,name=history_id,json=historyId,proto3" json:"history_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceCreateUserHistoryResponse) Reset() {
	*x = DatabaseServiceCreateUserHistoryResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceCreateUserHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceCreateUserHistoryResponse) ProtoMessage() {}

func (x *DatabaseServiceCreateUserHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceCreateUserHistoryResponse.ProtoReflect.Descriptor instead.
func (*DatabaseServiceCreateUserHistoryResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{17}
}

func (x *DatabaseServiceCreateUserHistoryResponse) GetHistoryId() int64 {
	if x != nil {
		return x.HistoryId
	}
	return 0
}

type DatabaseServiceGetUserHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit         *int32                 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset        *int32                 `protobuf:"varint,4,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceGetUserHistoryRequest) Reset() {
	*x = DatabaseServiceGetUserHistoryRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceGetUserHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceGetUserHistoryRequest) ProtoMessage() {}

func (x *DatabaseServiceGetUserHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceGetUserHistoryRequest.ProtoReflect.Descriptor instead.
func (*DatabaseServiceGetUserHistoryRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{18}
}

func (x *DatabaseServiceGetUserHistoryRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DatabaseServiceGetUserHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DatabaseServiceGetUserHistoryRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *DatabaseServiceGetUserHistoryRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type DbUserHistoryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ServerId      string                 `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Reason        *string                `protobuf:"bytes,5,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	EvidenceUrl   *string                `protobuf:"bytes,6,opt,name=evidence_url,json=evidenceUrl,proto3,oneof" json:"evidence_url,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbUserHistoryEntry) Reset() {
	*x = DbUserHistoryEntry{}
	mi := &file_snitch_v1_database_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbUserHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbUserHistoryEntry) ProtoMessage() {}

func (x *DbUserHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbUserHistoryEntry.ProtoReflect.Descriptor instead.
func (*DbUserHistoryEntry) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{19}
}

func (x *DbUserHistoryEntry) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DbUserHistoryEntry) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DbUserHistoryEntry) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *DbUserHistoryEntry) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DbUserHistoryEntry) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *DbUserHistoryEntry) GetEvidenceUrl() string {
	if x != nil && x.EvidenceUrl != nil {
		return *x.EvidenceUrl
	}
	return ""
}

func (x *DbUserHistoryEntry) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type DatabaseServiceGetUserHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*DbUserHistoryEntry  `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseServiceGetUserHistoryResponse) Reset() {
	*x = DatabaseServiceGetUserHistoryResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseServiceGetUserHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseServiceGetUserHistoryResponse) ProtoMessage() {}

func (x *DatabaseServiceGetUserHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseServiceGetUserHistoryResponse.ProtoReflect.Descriptor instead.
func (*DatabaseServiceGetUserHistoryResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{20}
}

func (x *DatabaseServiceGetUserHistoryResponse) GetEntries() []*DbUserHistoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ListServersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersRequest) Reset() {
	*x = ListServersRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersRequest) ProtoMessage() {}

func (x *ListServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersRequest.ProtoReflect.Descriptor instead.
func (*ListServersRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{21}
}

func (x *ListServersRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type ServerEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	GroupId       string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerEntry) Reset() {
	*x = ServerEntry{}
	mi := &file_snitch_v1_database_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerEntry) ProtoMessage() {}

func (x *ServerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerEntry.ProtoReflect.Descriptor instead.
func (*ServerEntry) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{22}
}

func (x *ServerEntry) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerEntry) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type ListServersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []*ServerEntry         `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersResponse) Reset() {
	*x = ListServersResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersResponse) ProtoMessage() {}

func (x *ListServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersResponse.ProtoReflect.Descriptor instead.
func (*ListServersResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{23}
}

func (x *ListServersResponse) GetServers() []*ServerEntry {
	if x != nil {
		return x.Servers
	}
	return nil
}

// Backup operations
type CreateBackupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BackupPath    string                 `protobuf:"bytes,1,opt,name=backup_path,json=backupPath,proto3" json:"backup_path,omitempty"`
	GroupId       *string                `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3,oneof" json:"group_id,omitempty"` // If specified, backup single group; if empty, backup metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBackupRequest) Reset() {
	*x = CreateBackupRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBackupRequest) ProtoMessage() {}

func (x *CreateBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBackupRequest.ProtoReflect.Descriptor instead.
func (*CreateBackupRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{24}
}

func (x *CreateBackupRequest) GetBackupPath() string {
	if x != nil {
		return x.BackupPath
	}
	return ""
}

func (x *CreateBackupRequest) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

type CreateBackupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BackupPath    string                 `protobuf:"bytes,1,opt,name=backup_path,json=backupPath,proto3" json:"backup_path,omitempty"`
	SizeBytes     int64                  `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBackupResponse) Reset() {
	*x = CreateBackupResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBackupResponse) ProtoMessage() {}

func (x *CreateBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBackupResponse.ProtoReflect.Descriptor instead.
func (*CreateBackupResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{25}
}

func (x *CreateBackupResponse) GetBackupPath() string {
	if x != nil {
		return x.BackupPath
	}
	return ""
}

func (x *CreateBackupResponse) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

type ListGroupIDsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGroupIDsRequest) Reset() {
	*x = ListGroupIDsRequest{}
	mi := &file_snitch_v1_database_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupIDsRequest) ProtoMessage() {}

func (x *ListGroupIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupIDsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupIDsRequest) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{26}
}

type ListGroupIDsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupIds      []string               `protobuf:"bytes,1,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGroupIDsResponse) Reset() {
	*x = ListGroupIDsResponse{}
	mi := &file_snitch_v1_database_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupIDsResponse) ProtoMessage() {}

func (x *ListGroupIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_snitch_v1_database_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupIDsResponse.ProtoReflect.Descriptor instead.
func (*ListGroupIDsResponse) Descriptor() ([]byte, []int) {
	return file_snitch_v1_database_proto_rawDescGZIP(), []int{27}
}

func (x *ListGroupIDsResponse) GetGroupIds() []string {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

var File_snitch_v1_database_proto protoreflect.FileDescriptor

const file_snitch_v1_database_proto_rawDesc = "" +
	"\n" +
	"\x18snitch/v1/database.proto\x12\tsnitch.v1\"N\n" +
	"\x12CreateGroupRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x1d\n" +
	"\n" +
	"group_name\x18\x02 \x01(\tR\tgroupName\"0\n" +
	"\x13CreateGroupResponse\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\"7\n" +
	"\x18FindGroupByServerRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\"6\n" +
	"\x19FindGroupByServerResponse\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\"Q\n" +
	"\x17AddServerToGroupRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\"7\n" +
	"\x18AddServerToGroupResponse\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\"7\n" +
	"\x1aCreateGroupDatabaseRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\"8\n" +
	"\x1bCreateGroupDatabaseResponse\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\"\xe7\x01\n" +
	"\"DatabaseServiceCreateReportRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1f\n" +
	"\vreporter_id\x18\x03 \x01(\tR\n" +
	"reporterId\x12\x1b\n" +
	"\tserver_id\x18\x04 \x01(\tR\bserverId\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12&\n" +
	"\fevidence_url\x18\x06 \x01(\tH\x00R\vevidenceUrl\x88\x01\x01B\x0f\n" +
	"\r_evidence_url\"B\n" +
	"#DatabaseServiceCreateReportResponse\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\x03R\breportId\"Y\n" +
	"\x1fDatabaseServiceGetReportRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x1b\n" +
	"\treport_id\x18\x02 \x01(\x03R\breportId\"\xf9\x01\n" +
	" DatabaseServiceGetReportResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1f\n" +
	"\vreporter_id\x18\x03 \x01(\tR\n" +
	"reporterId\x12\x1b\n" +
	"\tserver_id\x18\x04 \x01(\tR\bserverId\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12&\n" +
	"\fevidence_url\x18\x06 \x01(\tH\x00R\vevidenceUrl\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAtB\x0f\n" +
	"\r_evidence_url\"\xb5\x01\n" +
	"!DatabaseServiceListReportsRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x1c\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x03 \x01(\x05H\x01R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\x04 \x01(\x05H\x02R\x06offset\x88\x01\x01B\n" +
	"\n" +
	"\b_user_idB\b\n" +
	"\x06_limitB\t\n" +
	"\a_offset\"B\n" +
	"#DatabaseServiceDeleteReportResponse\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\x03R\breportId\"k\n" +
	"\"DatabaseServiceListReportsResponse\x12E\n" +
	"\areports\x18\x01 \x03(\v2+.snitch.v1.DatabaseServiceGetReportResponseR\areports\"\\\n" +
	"\"DatabaseServiceDeleteReportRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x1b\n" +
	"\treport_id\x18\x02 \x01(\x03R\breportId\"\xf3\x01\n" +
	"'DatabaseServiceCreateUserHistoryRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1b\n" +
	"\tserver_id\x18\x03 \x01(\tR\bserverId\x12\x16\n" +
	"\x06action\x18\x04 \x01(\tR\x06action\x12\x1b\n" +
	"\x06reason\x18\x05 \x01(\tH\x00R\x06reason\x88\x01\x01\x12&\n" +
	"\fevidence_url\x18\x06 \x01(\tH\x01R\vevidenceUrl\x88\x01\x01B\t\n" +
	"\a_reasonB\x0f\n" +
	"\r_evidence_url\"I\n" +
	"(DatabaseServiceCreateUserHistoryResponse\x12\x1d\n" +
	"\n" +
	"history_id\x18\x01 \x01(\x03R\thistoryId\"\xa7\x01\n" +
	"$DatabaseServiceGetUserHistoryRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x19\n" +
	"\x05limit\x18\x03 \x01(\x05H\x00R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\x04 \x01(\x05H\x01R\x06offset\x88\x01\x01B\b\n" +
	"\x06_limitB\t\n" +
	"\a_offset\"\xf2\x01\n" +
	"\x12DbUserHistoryEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1b\n" +
	"\tserver_id\x18\x03 \x01(\tR\bserverId\x12\x16\n" +
	"\x06action\x18\x04 \x01(\tR\x06action\x12\x1b\n" +
	"\x06reason\x18\x05 \x01(\tH\x00R\x06reason\x88\x01\x01\x12&\n" +
	"\fevidence_url\x18\x06 \x01(\tH\x01R\vevidenceUrl\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAtB\t\n" +
	"\a_reasonB\x0f\n" +
	"\r_evidence_url\"`\n" +
	"%DatabaseServiceGetUserHistoryResponse\x127\n" +
	"\aentries\x18\x01 \x03(\v2\x1d.snitch.v1.DbUserHistoryEntryR\aentries\"/\n" +
	"\x12ListServersRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\"E\n" +
	"\vServerEntry\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\"G\n" +
	"\x13ListServersResponse\x120\n" +
	"\aservers\x18\x01 \x03(\v2\x16.snitch.v1.ServerEntryR\aservers\"c\n" +
	"\x13CreateBackupRequest\x12\x1f\n" +
	"\vbackup_path\x18\x01 \x01(\tR\n" +
	"backupPath\x12\x1e\n" +
	"\bgroup_id\x18\x02 \x01(\tH\x00R\agroupId\x88\x01\x01B\v\n" +
	"\t_group_id\"V\n" +
	"\x14CreateBackupResponse\x12\x1f\n" +
	"\vbackup_path\x18\x01 \x01(\tR\n" +
	"backupPath\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x02 \x01(\x03R\tsizeBytes\"\x15\n" +
	"\x13ListGroupIDsRequest\"3\n" +
	"\x14ListGroupIDsResponse\x12\x1b\n" +
	"\tgroup_ids\x18\x01 \x03(\tR\bgroupIds2\xaf\n" +
	"\n" +
	"\x0fDatabaseService\x12N\n" +
	"\vCreateGroup\x12\x1d.snitch.v1.CreateGroupRequest\x1a\x1e.snitch.v1.CreateGroupResponse\"\x00\x12`\n" +
	"\x11FindGroupByServer\x12#.snitch.v1.FindGroupByServerRequest\x1a$.snitch.v1.FindGroupByServerResponse\"\x00\x12]\n" +
	"\x10AddServerToGroup\x12\".snitch.v1.AddServerToGroupRequest\x1a#.snitch.v1.AddServerToGroupResponse\"\x00\x12f\n" +
	"\x13CreateGroupDatabase\x12%.snitch.v1.CreateGroupDatabaseRequest\x1a&.snitch.v1.CreateGroupDatabaseResponse\"\x00\x12o\n" +
	"\fCreateReport\x12-.snitch.v1.DatabaseServiceCreateReportRequest\x1a..snitch.v1.DatabaseServiceCreateReportResponse\"\x00\x12f\n" +
	"\tGetReport\x12*.snitch.v1.DatabaseServiceGetReportRequest\x1a+.snitch.v1.DatabaseServiceGetReportResponse\"\x00\x12l\n" +
	"\vListReports\x12,.snitch.v1.DatabaseServiceListReportsRequest\x1a-.snitch.v1.DatabaseServiceListReportsResponse\"\x00\x12o\n" +
	"\fDeleteReport\x12-.snitch.v1.DatabaseServiceDeleteReportRequest\x1a..snitch.v1.DatabaseServiceDeleteReportResponse\"\x00\x12~\n" +
	"\x11CreateUserHistory\x122.snitch.v1.DatabaseServiceCreateUserHistoryRequest\x1a3.snitch.v1.DatabaseServiceCreateUserHistoryResponse\"\x00\x12u\n" +
	"\x0eGetUserHistory\x12/.snitch.v1.DatabaseServiceGetUserHistoryRequest\x1a0.snitch.v1.DatabaseServiceGetUserHistoryResponse\"\x00\x12N\n" +
	"\vListServers\x12\x1d.snitch.v1.ListServersRequest\x1a\x1e.snitch.v1.ListServersResponse\"\x00\x12Q\n" +
	"\fCreateBackup\x12\x1e.snitch.v1.CreateBackupRequest\x1a\x1f.snitch.v1.CreateBackupResponse\"\x00\x12Q\n" +
	"\fListGroupIDs\x12\x1e.snitch.v1.ListGroupIDsRequest\x1a\x1f.snitch.v1.ListGroupIDsResponse\"\x00B)Z'snitch/pkg/proto/gen/snitch/v1;snitchv1b\x06proto3"

var (
	file_snitch_v1_database_proto_rawDescOnce sync.Once
	file_snitch_v1_database_proto_rawDescData []byte
)

func file_snitch_v1_database_proto_rawDescGZIP() []byte {
	file_snitch_v1_database_proto_rawDescOnce.Do(func() {
		file_snitch_v1_database_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_snitch_v1_database_proto_rawDesc), len(file_snitch_v1_database_proto_rawDesc)))
	})
	return file_snitch_v1_database_proto_rawDescData
}

var file_snitch_v1_database_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_snitch_v1_database_proto_goTypes = []any{
	(*CreateGroupRequest)(nil),                       // 0: snitch.v1.CreateGroupRequest
	(*CreateGroupResponse)(nil),                      // 1: snitch.v1.CreateGroupResponse
	(*FindGroupByServerRequest)(nil),                 // 2: snitch.v1.FindGroupByServerRequest
	(*FindGroupByServerResponse)(nil),                // 3: snitch.v1.FindGroupByServerResponse
	(*AddServerToGroupRequest)(nil),                  // 4: snitch.v1.AddServerToGroupRequest
	(*AddServerToGroupResponse)(nil),                 // 5: snitch.v1.AddServerToGroupResponse
	(*CreateGroupDatabaseRequest)(nil),               // 6: snitch.v1.CreateGroupDatabaseRequest
	(*CreateGroupDatabaseResponse)(nil),              // 7: snitch.v1.CreateGroupDatabaseResponse
	(*DatabaseServiceCreateReportRequest)(nil),       // 8: snitch.v1.DatabaseServiceCreateReportRequest
	(*DatabaseServiceCreateReportResponse)(nil),      // 9: snitch.v1.DatabaseServiceCreateReportResponse
	(*DatabaseServiceGetReportRequest)(nil),          // 10: snitch.v1.DatabaseServiceGetReportRequest
	(*DatabaseServiceGetReportResponse)(nil),         // 11: snitch.v1.DatabaseServiceGetReportResponse
	(*DatabaseServiceListReportsRequest)(nil),        // 12: snitch.v1.DatabaseServiceListReportsRequest
	(*DatabaseServiceDeleteReportResponse)(nil),      // 13: snitch.v1.DatabaseServiceDeleteReportResponse
	(*DatabaseServiceListReportsResponse)(nil),       // 14: snitch.v1.DatabaseServiceListReportsResponse
	(*DatabaseServiceDeleteReportRequest)(nil),       // 15: snitch.v1.DatabaseServiceDeleteReportRequest
	(*DatabaseServiceCreateUserHistoryRequest)(nil),  // 16: snitch.v1.DatabaseServiceCreateUserHistoryRequest
	(*DatabaseServiceCreateUserHistoryResponse)(nil), // 17: snitch.v1.DatabaseServiceCreateUserHistoryResponse
	(*DatabaseServiceGetUserHistoryRequest)(nil),     // 18: snitch.v1.DatabaseServiceGetUserHistoryRequest
	(*DbUserHistoryEntry)(nil),                       // 19: snitch.v1.DbUserHistoryEntry
	(*DatabaseServiceGetUserHistoryResponse)(nil),    // 20: snitch.v1.DatabaseServiceGetUserHistoryResponse
	(*ListServersRequest)(nil),                       // 21: snitch.v1.ListServersRequest
	(*ServerEntry)(nil),                              // 22: snitch.v1.ServerEntry
	(*ListServersResponse)(nil),                      // 23: snitch.v1.ListServersResponse
	(*CreateBackupRequest)(nil),                      // 24: snitch.v1.CreateBackupRequest
	(*CreateBackupResponse)(nil),                     // 25: snitch.v1.CreateBackupResponse
	(*ListGroupIDsRequest)(nil),                      // 26: snitch.v1.ListGroupIDsRequest
	(*ListGroupIDsResponse)(nil),                     // 27: snitch.v1.ListGroupIDsResponse
}
var file_snitch_v1_database_proto_depIdxs = []int32{
	11, // 0: snitch.v1.DatabaseServiceListReportsResponse.reports:type_name -> snitch.v1.DatabaseServiceGetReportResponse
	19, // 1: snitch.v1.DatabaseServiceGetUserHistoryResponse.entries:type_name -> snitch.v1.DbUserHistoryEntry
	22, // 2: snitch.v1.ListServersResponse.servers:type_name -> snitch.v1.ServerEntry
	0,  // 3: snitch.v1.DatabaseService.CreateGroup:input_type -> snitch.v1.CreateGroupRequest
	2,  // 4: snitch.v1.DatabaseService.FindGroupByServer:input_type -> snitch.v1.FindGroupByServerRequest
	4,  // 5: snitch.v1.DatabaseService.AddServerToGroup:input_type -> snitch.v1.AddServerToGroupRequest
	6,  // 6: snitch.v1.DatabaseService.CreateGroupDatabase:input_type -> snitch.v1.CreateGroupDatabaseRequest
	8,  // 7: snitch.v1.DatabaseService.CreateReport:input_type -> snitch.v1.DatabaseServiceCreateReportRequest
	10, // 8: snitch.v1.DatabaseService.GetReport:input_type -> snitch.v1.DatabaseServiceGetReportRequest
	12, // 9: snitch.v1.DatabaseService.ListReports:input_type -> snitch.v1.DatabaseServiceListReportsRequest
	15, // 10: snitch.v1.DatabaseService.DeleteReport:input_type -> snitch.v1.DatabaseServiceDeleteReportRequest
	16, // 11: snitch.v1.DatabaseService.CreateUserHistory:input_type -> snitch.v1.DatabaseServiceCreateUserHistoryRequest
	18, // 12: snitch.v1.DatabaseService.GetUserHistory:input_type -> snitch.v1.DatabaseServiceGetUserHistoryRequest
	21, // 13: snitch.v1.DatabaseService.ListServers:input_type -> snitch.v1.ListServersRequest
	24, // 14: snitch.v1.DatabaseService.CreateBackup:input_type -> snitch.v1.CreateBackupRequest
	26, // 15: snitch.v1.DatabaseService.ListGroupIDs:input_type -> snitch.v1.ListGroupIDsRequest
	1,  // 16: snitch.v1.DatabaseService.CreateGroup:output_type -> snitch.v1.CreateGroupResponse
	3,  // 17: snitch.v1.DatabaseService.FindGroupByServer:output_type -> snitch.v1.FindGroupByServerResponse
	5,  // 18: snitch.v1.DatabaseService.AddServerToGroup:output_type -> snitch.v1.AddServerToGroupResponse
	7,  // 19: snitch.v1.DatabaseService.CreateGroupDatabase:output_type -> snitch.v1.CreateGroupDatabaseResponse
	9,  // 20: snitch.v1.DatabaseService.CreateReport:output_type -> snitch.v1.DatabaseServiceCreateReportResponse
	11, // 21: snitch.v1.DatabaseService.GetReport:output_type -> snitch.v1.DatabaseServiceGetReportResponse
	14, // 22: snitch.v1.DatabaseService.ListReports:output_type -> snitch.v1.DatabaseServiceListReportsResponse
	13, // 23: snitch.v1.DatabaseService.DeleteReport:output_type -> snitch.v1.DatabaseServiceDeleteReportResponse
	17, // 24: snitch.v1.DatabaseService.CreateUserHistory:output_type -> snitch.v1.DatabaseServiceCreateUserHistoryResponse
	20, // 25: snitch.v1.DatabaseService.GetUserHistory:output_type -> snitch.v1.DatabaseServiceGetUserHistoryResponse
	23, // 26: snitch.v1.DatabaseService.ListServers:output_type -> snitch.v1.ListServersResponse
	25, // 27: snitch.v1.DatabaseService.CreateBackup:output_type -> snitch.v1.CreateBackupResponse
	27, // 28: snitch.v1.DatabaseService.ListGroupIDs:output_type -> snitch.v1.ListGroupIDsResponse
	16, // [16:29] is the sub-list for method output_type
	3,  // [3:16] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_snitch_v1_database_proto_init() }
func file_snitch_v1_database_proto_init() {
	if File_snitch_v1_database_proto != nil {
		return
	}
	file_snitch_v1_database_proto_msgTypes[8].OneofWrappers = []any{}
	file_snitch_v1_database_proto_msgTypes[11].OneofWrappers = []any{}
	file_snitch_v1_database_proto_msgTypes[12].OneofWrappers = []any{}
	file_snitch_v1_database_proto_msgTypes[16].OneofWrappers = []any{}
	file_snitch_v1_database_proto_msgTypes[18].OneofWrappers = []any{}
	file_snitch_v1_database_proto_msgTypes[19].OneofWrappers = []any{}
	file_snitch_v1_database_proto_msgTypes[24].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_snitch_v1_database_proto_rawDesc), len(file_snitch_v1_database_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_snitch_v1_database_proto_goTypes,
		DependencyIndexes: file_snitch_v1_database_proto_depIdxs,
		MessageInfos:      file_snitch_v1_database_proto_msgTypes,
	}.Build()
	File_snitch_v1_database_proto = out.File
	file_snitch_v1_database_proto_goTypes = nil
	file_snitch_v1_database_proto_depIdxs = nil
}
